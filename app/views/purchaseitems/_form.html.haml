= form_for(@purchaseitem) do |f|
  - if @purchaseitem.errors.any?
    #error_explanation
      %h2
        = pluralize(@purchaseitem.errors.count, "error")
        prohibited this purchaseitem from being saved:
      %ul
        - @purchaseitem.errors.full_messages.each do |msg|
          %li= msg
  :css
    div#field {
    	width: 300px;
    	float: left;
    }
    
    div#preview {
    	width: 300px;
    	float: right;
    }

    div#preview td {
    	background-color: #F0F0F0;
    	padding: 10px;
    	text-align: right;
    	width: 100px;
    }
    
    div#preview tr:first-child td{
    	background-color: #0066CC;
    	padding: 10px;	
    	color: #FFF;
    	width: 100px;
    	font-weight: bold;
    	}

	  %table
  %td
    %table
      %tr
    .field
  %td Date
  %td= f.date_select :purchase_date
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %td
  %tr
  .field
  %td= f.label :invoice_id
  %td= f.text_field :invoice_id, :id => "invoiceNumber"
  %tr
  .field
  %td
    Supplier
    %br/
  %td= f.collection_select :supplier_id, Supplier.find(:all), :id, :supplier_name, {:prompt => "Select Supplier"}, {:style => "width:215px"}
  %tr
  .field
  %td Branch
  %td= f.collection_select :branch_id, Branch.find(:all), :id, :branch_location, {:prompt => "Select Branch"},  {:style => "width:215px"}
  %tr
  .field
  %td Item
  %td= f.collection_select :inventory_id, Inventoryitem.find(:all), :id, :item_name, {:prompt => "Select Item"},  {:style => "width:215px"}
  %tr
  .field
  %td Unit Cost
  %td= f.text_field :purchase_unitCost, :id => "purchase_unitCost", :onchange => "updateVatAmount()"
  %tr
  .field
  %td= f.label :purchase_quantity
  %td= f.text_field :purchase_quantity, :id => "purchase_quantity", :onchange => "updateVatAmount()"
  %tr
  .field
  %td
    = f.label :purchase_amount
    %br/
  %td
    = f.text_field :purchase_amount, :id => "purchase_amount", :onchange => "updateVatAmount()"
  %tr
  .field
  %td VAT Type
  %tr
    %td &nbsp;
    %td
      = f.radio_button :vat_type, "VAT-Inclusive", :onchange => "updateVatAmount()", :id => "VAT-Inclusive"
      VAT-Inclusive
  %tr
    %td &nbsp;
    %td
      = f.radio_button :vat_type, "VAT-Exclusive", :onchange => "updateVatAmount()", :id => "VAT-Exclusive"
      VAT-Exclusive
  %tr
    %td &nbsp;
    %td
      = f.radio_button :vat_type, "VAT-Exempted", :onchange => "updateVatAmount()", :id => "VAT-Exempted"
      VAT-Exempted
  %tr
  .field
  %td= f.label :vat_amount
  %td= f.text_field :vat_amount, :readonly => true, :id => "vat_amount"
  %tr
  .field
  %td= f.label :net_amount
  %td= f.text_field :net_amount, :readonly => true, :id => "net_amount"
  %td
  %tr
  .actions
  %td
  %td
    = f.submit "Add another item", :button_value => "addAnotherItem"
    = f.submit "Save as draft"
  %td
  %td
    #preview
      %table
        %tr CURRENT ITEMS IN INVOICE
        %tr
          %td Item name
          %td Unit Cost
          %td Purchase quantity
          %td Purchase amount
          %td Vat type
          %td Vat amount
          %td Net amount
        %tr
          %td#inP
          %td#ucP
          %td#pqP
          %td#paP
          %td#vtP
          %td#vaP
          %td#naP
        %tr
          %td Total
          %td
          %td
          %td
          %td
          %td
          %td
  %html
    :javascript
      function updateVatAmount(){
              var purchaseAmount = document.getElementById('purchase_amount');
              var vatAmount = 0;
              var netAmount = 0;
              
              if(purchaseAmount.value == ""){
              	
              }else{
              
              function checkVat(){
                  if(document.getElementById('VAT-Inclusive').checked){
                      vatAmount = purchaseAmount.value / 1.12;
                      vatAmount = purchaseAmount.value - vatAmount;
                      netAmount = purchaseAmount.value - vatAmount;
                      //vatAmount = purchaseAmount.value * (3/28);
                  }
                  
                  if(document.getElementById('VAT-Exclusive').checked){
                      vatAmount = purchaseAmount.value * .12;
                      netAmount = purchaseAmount.value;
                  }
                  
                  if(document.getElementById('VAT-Exempted').checked){
                      vatAmount = 0;
                      netAmount = purchaseAmount.value;
                  }
              } // end of checking vat
          
          checkVat();
          var totalVat = vatAmount;
          var totalNet = netAmount;
          //document.getElementById('totalVat').innerHTML = "Total vat" + totalVat;
          var totalVatField = document.getElementById('vat_amount');
          totalVatField.value = totalVat;
          
          var totalNetField = document.getElementById('net_amount');
          totalNetField.value = totalNet;
          
          document.getElementById("paP").innerHTML = document.getElementById('purchase_amount').value;
          document.getElementById("vaP").innerHTML = document.getElementById('vat_amount').value;
          document.getElementById("naP").innerHTML = document.getElementById('net_amount').value;
          
          } //end of update total function
          document.getElementById("ucP").innerHTML = document.getElementById('purchase_unitCost').value;
          document.getElementById("pqP").innerHTML = document.getElementById('purchase_quantity').value;
          }

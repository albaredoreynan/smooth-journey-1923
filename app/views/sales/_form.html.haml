- content_for(:head, javascript_include_tag(:sales))
= form_for(@sale) do |f|
  - if @sale.errors.any?
    #error_explanation
      / <h2><haml:loud> pluralize(@sale.errors.count, &amp;quot;error&amp;quot;) </haml:loud> prohibited this sale from being saved:</h2>
      %ul
        - @sale.errors.full_messages.each do |msg|
          / <li><haml:loud> msg </haml:loud></li>
 
  %fieldset#colleft
    .multi_input
      .input
        %span
          = f.label :branch_id
          = f.collection_select :branch_id, Branch.all, :id, :location, :prompt => true
        %span  
          = f.label :date
          = f.date_select :date
        %span  
          = f.label :employee_id
          = collection_select(:sale, :employee_id, Employee.all, :id, :full_name, :prompt => true)
      .input
        %span
          = f.label :customer_count
          = f.text_field :customer_count
        %span
          = f.label :transaction_count
          = f.text_field :transaction_count
    .colleft
      %fieldset.field_divider
        %legend.box_name= "Sales By Category"
        - @category_names = Category.all.map(&:name).reverse
        - @category_ids = Category.all.map(&:id).reverse
        - @settlement_type_names = SettlementType.all.map(&:name).reverse
        - @settlement_type_ids = SettlementType.all.map(&:id).reverse
        = f.fields_for :csrows do |builder|
          .input
            - id = @category_ids.pop
            - if id!=nil
              = builder.hidden_field :category_id, :value => id
              = f.label @category_names.pop
              = builder.text_field :cs_amount, :class => :category
        .input
          = f.label "Total Amount"
          = f.text_field :total_amount_cs
        .input
          = f.label "Total Revenue"
          = f.text_field :total_revenue_cs
        .input
          = f.label :vat, 'VAT'
          = text_field_tag :vat,'',:size => 30
        .input
          = f.label "Service Charge"
          = f.text_field :service_charge
        .input
          = f.label "GROSS TOTAL"
          = text_field_tag :gross_total,'',:size => 30
           
    .colright
      %fieldset.field_divider
        %legend.box_name= "Sales By Settlement"
        = f.fields_for :ssrows do |builder|
          - id =  @settlement_type_ids.pop
          - if id!=nil
            = builder.hidden_field :settlement_type_id, :value => id
            .input
              = f.label @settlement_type_names.pop
              = builder.text_field :ss_amount, :class => :settlementtype
        .input
          = f.label "VOIDS"
          = f.text_field :void
        .input  
          = f.label "VAT"
          = f.text_field :vat
        .input  
          = f.label "GROSS TOTAL"
          = f.text_field :gross_total_ss
        .input
          = f.label "NET TOTAL"
          = f.text_field :net_total_ss
    .colleft
      %fieldset.field_divider
        %legend.box_name= "Types Of Transaction"
        %h4.title DINE IN
        .input
          = f.label "Customer Count (CC)"
          = f.text_field :dinein_cc
        .input
          = f.label "Transaction Count (TC)"
          = f.text_field :dinein_tc
        .input
          = f.label "Per Person Average (PPA)"
          = f.text_field :dinein_ppa
        .input
          = f.label "Per Transaction Average (PTA)"
          = f.text_field :dinein_pta
    
        %h4.title DELIVERY:
        .input
          = f.label "Delivery Sales (DS)"
          = f.text_field :delivery_sales
        .input  
          = f.label "Transaction Count (TC)"
          = f.text_field :delivery_tc
        .input  
          = f.label "Per Transaction Average (PTA)"
          = f.text_field :delivery_pta
  
        %h4.title TAKE OUT:
        .input  
          = f.label "Transaction Count (TC)"
          = f.text_field :takeout_tc
        .input  
          = f.label "Per Transaction Average (PTA)"
          = f.text_field :takeout_pta
        .input  
          = f.label "Service Charge"
          = f.text_field :service_charge
    .actions
      = f.submit "Save as Draft", :onHover => "checkTotal()"

:ruby
  require 'csv'
 
  csv_output = CSV.generate do |csv|
    csv << ['Date From:', @start_date, 'Date To', @end_date]
    csv << ['Item Subcategory','Item', 'Invoice number', 'Supplier name', 'Purchase date', 'Qty', 'Unit', 'Unit cost', 'VAT', 'Purchase amount', 'Total amount']
      grand_total = 0
      total_purchase_amount = 0
      total_purchase_all = 0
      total_purchase_amount_vat = 0
      @purchase_items.each do |subcategory, purchase_items|
        subtotal = purchase_items.map(&:net_amount).inject(:+)
        
        grand_total += subtotal
        csv << [subcategory.name,'','','','','','','','','','']
          
          purchase_items.each do |purchase_item|
            total_purchase_amount += purchase_item.purchase_amount
            total_purchase_amount_vat += purchase_item.vat_amount
            purchase_item.convert_unit = true
              p_amount = purchase_item.purchase_amount - purchase_item.vat_amount
              csv << ['',
                      purchase_item.item.name,
                      purchase_item.purchase.invoice_number,
                      purchase_item.purchase.supplier_name,
                      purchase_item.purchase.purchase_date,
                      number_with_precision(purchase_item.quantity, :precision => 2),
                      purchase_item.item.unit_name,
                      number_to_currency(purchase_item.unit_cost, :unit => ''),
                      number_to_currency(purchase_item.vat_amount, :unit => ''),
                      number_to_currency(p_amount, :unit => ''),
                      number_to_currency(purchase_item.net_amount, :unit => '')]    
          end
      end
    total_purchase_all =  total_purchase_amount - total_purchase_amount_vat
    csv << ['Grand Total','','','','','','','','', number_to_currency(total_purchase_all, :unit => peso_sign), number_to_currency(grand_total, :unit => peso_sign)]
  end 
  puts csv_output         

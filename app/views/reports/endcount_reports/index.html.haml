- content_for :head do
  = javascript_include_tag(:endcount_reports)
  /[if !IE]
    = javascript_tag("$(function() { $('#show_by_date_reports').datepicker('setDate', new Date($('#entry_date').val() )); });")
    
- content_for :sidebar do
  %h3 Search
  = render :partial => 'shared/end_counts_search_form', locals: { search_path: 'endcounts/search' }
.block
  = render 'shared/menu/reports'
  .secondary-navigation
  .content
    .title_action_bar
      %h2.title= endcount_reports_title(params[:date])
      .new_actions
        = 'Download as'
        = link_to 'CSV', endcount_reports_path(params.merge(format: 'csv'))
        = link_to 'PDF', endcount_reports_path(params.merge(format: 'pdf'))
    .inner
      %table
        %thead
          %tr
            %th
            %th
            %th
            %th{:colspan => 2, :style => 'text-align:center; width: 25%;'} Beginning
            %th
            %th{:colspan => 3, :style => 'text-align:center; width: 25%'} Ending
            %th
          %tr
            %th Item
            %th.number Unit Cost
            %th Unit
            %th.number Count
            %th.monetary Total
            %th.monetary Purchases
            %th.number Count
            %th.number Total
            %th.number{ :title => 'Cost of Goods' } COGS
            %th.number USAGE
        - grand_total_beginning_count = 0.0
        - grand_total_beginning_total = 0.0
        - grand_total_purchase_amount = 0.0
        - grand_total_ending_count = 0.0
        - grand_total_ending_total = 0.0
        - grand_total_cogs = 0.0
        - by_subcategory = @endcount.items.group_by { |i| i.subcategory }
        - by_subcategory.each do |subcategory, items|
          %tbody
            %tr{:id => dom_id(subcategory), :class => 'subcategory_row'}
              %th{:colspan => 3}= subcategory.name
              - subtotal_beginning_count = items.map(&:beginning_count).reject(&:nil?).inject(:+)
              - grand_total_beginning_count += subtotal_beginning_count if subtotal_beginning_count
              %th.number= subtotal_beginning_count
              - subtotal_beginning_total = items.map(&:beginning_total).reject(&:nil?).inject(:+)
              - grand_total_beginning_total += subtotal_beginning_total if subtotal_beginning_total
              %th.monetary= number_to_currency(subtotal_beginning_total, :unit => peso_sign)
              - subtotal_purchase_amount = items.map(&:purchase_amount_period).reject(&:nil?).inject(:+)
              - grand_total_purchase_amount += subtotal_purchase_amount if subtotal_purchase_amount
              %th.monetary= number_to_currency(subtotal_purchase_amount, :unit => peso_sign)
              - subtotal_ending_count = items.map(&:ending_count).reject(&:nil?).inject(:+)
              - grand_total_ending_count += subtotal_ending_count if subtotal_ending_count
              %th.number= subtotal_ending_count
              - subtotal_ending_total = items.map(&:ending_total).reject(&:nil?).inject(:+)
              - grand_total_ending_total += subtotal_ending_total if subtotal_ending_total
              %th.monetary= number_to_currency(subtotal_ending_total, :unit => peso_sign)
              - subtotal_cogs = items.map(&:cogs).reject(&:nil?).inject(:+)
              - grand_total_cogs += subtotal_cogs if subtotal_cogs
              %th.number{:colspan => 2}= number_with_precision(subtotal_cogs, :precision => 2, :delimiter => ',')
              - items.each do |item|
                %tr{:id => dom_id(item), :class => 'item_row'}
                  %td= item.name
                  %td.number= "#{number_to_currency(item.unit_cost, :unit => peso_sign)}"
                  %td!= item.unit.name
                  %td.number= item.beginning_count
                  %td.monetary= number_to_currency(item.beginning_total, :unit => peso_sign) if item.beginning_count
                  %td.monetary= number_to_currency(item.purchase_amount_period, :unit => peso_sign)
                  %td.number= item.ending_count
                  %td.monetary= number_to_currency(item.ending_total, :unit => peso_sign) if item.ending_count
                  %td.monetary= number_to_currency(item.cogs, :unit => peso_sign)
                  %td.monetary= item.usage
              
        %tfoot
          %tr.totals
            %th{:colspan => 3} Grand Total
            %th.number= number_with_precision(grand_total_beginning_count, :precision => 2, :delimeter => ',')
            %th.monetary= number_to_currency(grand_total_beginning_total, :unit => peso_sign)
            %th.monetary= number_to_currency(grand_total_purchase_amount, :unit => peso_sign)
            %th.number= number_with_precision(grand_total_ending_count, :precision => 2, :delimeter => ',')
            %th.monetary= number_to_currency(grand_total_ending_total, :unit => peso_sign)
            %th.number= number_with_precision(grand_total_cogs, :precision => 2, :delimiter => ',')
            %th

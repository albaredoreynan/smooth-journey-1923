- content_for :head do
  = javascript_include_tag(:endcount_reports)
  /[if !IE]
    = javascript_tag("$(function() { $('#show_by_date_reports').datepicker('setDate', new Date($('#entry_date').val() )); });")
    
- content_for :sidebar do
  %h3 Search
  = render :partial => 'shared/end_counts_search_form', locals: { search_path: 'endcounts/search' }
.block
  = render 'shared/menu/reports'
  .secondary-navigation
  .content
    .title_action_bar
      - @branch_sel = Branch.find(params[:branch_id]) if params[:branch_id]
      %h2.title= endcount_reports_title(params[:date])+" - "+@branch_sel.location if @branch_sel
      .new_actions
        = 'Download as'
        = link_to 'CSV', endcount_reports_path(params.merge(format: 'csv'))
        = link_to 'PDF', endcount_reports_path(params.merge(format: 'pdf'))
    .inner
      %table
        %thead
          %tr
            %th
            %th
            %th{:colspan => 3, :style => 'text-align:left; width: 22%;'} Beginning Inventory
            %th{:colspan => 3, :style => 'text-align:left; width: 22%;'} Total Purchases
            %th{:colspan => 3, :style => 'text-align:left; width: 22%;'} Ending Inventory
            %th{:colspan => 3, :style => 'text-align:left; width: 34%;'} Cost Of Goods Sold (COGS)
            %th
          %tr
            %th Item
            %th Unit
            
            %th.number Qty
            %th.number Unit Cost
            %th.number Total
            
            %th.number Qty
            %th.number Unit Cost
            %th.number Amount
            
            %th.number Qty
            %th.number Unit Cost
            %th.number Amount
            
            %th.number Qty
            %th.number Unit Cost
            %th.number Amount
            %th.number %
          
        -#Declare are varaiables here
      
        -# grand_total_beginning_count = 0.0
        - grand_total_beginning_total = 0.0
        - grand_total_purchase_amount = 0.0
        -# grand_total_ending_count = 0.0
        - grand_total_ending_total = 0.0
        - grand_total_cogs = 0.0  
        
        - by_subcategory = @endcount.items.group_by { |i| i.subcategory }
        - by_subcategory.each do |subcategory, items|
          %tbody
            %tr{:id => dom_id(subcategory), :class => 'subcategory_row'}
              %th{:colspan => 2, :style => 'text-align:left; width: 22%;'}= subcategory.name
                
              - subtotal_beginning_total = items.map(&:beginning_total).reject(&:nil?).inject(:+)
              - grand_total_beginning_total += subtotal_beginning_total if subtotal_beginning_total
              %th.monetary{:colspan => 3, :style => 'text-align:right; width: 22%;'}= number_to_currency(subtotal_beginning_total, :unit => peso_sign)
                
              - subtotal_purchase_amount = items.map(&:purchase_amount_period).reject(&:nil?).inject(:+)
              - grand_total_purchase_amount += subtotal_purchase_amount if subtotal_purchase_amount
              %th.monetary{:colspan => 3, :style => 'text-align:right; width: 22%;'}= number_to_currency(subtotal_purchase_amount, :unit => peso_sign)
                
              - subtotal_ending_total = items.map(&:ending_total).reject(&:nil?).inject(:+)
              - grand_total_ending_total += subtotal_ending_total if subtotal_ending_total
              %th.monetary{:colspan => 3, :style => 'text-align:right; width: 22%;'}= number_to_currency(subtotal_ending_total, :unit => peso_sign)
              
              - subtotal_cogs = items.map(&:cogs).reject(&:nil?).inject(:+)
              - grand_total_cogs += subtotal_cogs if subtotal_cogs
              %th.monetary{:colspan => 3, :style => 'text-align:right; width: 34%;'}=  number_to_currency(subtotal_cogs, :unit => peso_sign)  
              %th  
            
            - items.each do |item|
              %tr{:id => dom_id(item), :class => 'item_row'}
                %td= item.name
                - units = Unit.find(item.unit_id)
                %td= units.name  
                
                %td.number= number_with_precision(item.beginning_count, :precision => 2, :delimiter => ',')
                %td.number= "#{number_to_currency(item.unit_cost, :unit => peso_sign)}"
                %td.monetary= number_to_currency(item.beginning_total, :unit => peso_sign) if item.beginning_count
                  
                %td.number= number_with_precision(item.purchase_quantity_true, :precision => 2, :delimiter => ',')
                %td.monetary= number_to_currency(item.purchase_unit_cost, :unit => peso_sign)
                %td.monetary= number_to_currency(item.purchase_amount_period, :unit => peso_sign)
                  
                %td.number= number_with_precision(item.ending_count, :precision => 2, :delimiter => ',')
                %td.monetary= number_to_currency(item.ending_unit_cost, :unit => peso_sign)
                %td.monetary= number_to_currency(item.ending_total, :unit => peso_sign) if item.ending_count
                  
                %td.number= number_with_precision(item.cogs_quantity, :precision => 2, :delimiter => ',')
                %td.monetary= number_to_currency(item.cogs_unit_cost, :unit => peso_sign)
                %td.monetary= number_to_currency(item.cogs, :unit => peso_sign) if item.cogs
                %td
        %tr.totals
          %td{:colspan => 2} Grand Total
          %td.monetary{:colspan => 3, :style => 'text-align:right; width: 22%;'}= number_to_currency(grand_total_beginning_total, :unit => peso_sign)
          %td.monetary{:colspan => 3, :style => 'text-align:right; width: 22%;'}= number_to_currency(grand_total_purchase_amount, :unit => peso_sign)
          %td.monetary{:colspan => 3, :style => 'text-align:right; width: 22%;'}= number_to_currency(grand_total_ending_total, :unit => peso_sign)
          %td.monetary{:colspan => 4, :style => 'text-align:right; width: 34%;'}= number_to_currency(grand_total_cogs, :unit => peso_sign)
